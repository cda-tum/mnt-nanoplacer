name: Deploy to PyPI

on:
  release:
    types: [published]
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
  KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}

jobs:
  build_wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
        name: Install Python
      - name: Build wheel
        run: pipx run build --wheel
      - name: Install wheel
        run: python -m pip install --verbose dist/*.whl
      - name: Run tests
        run: python -m unittest
      - uses: actions/upload-artifact@v4
        with:
          name: "artifact-wheel"
          path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
        name: Install Python
      - name: Build sdist
        run: pipx run build --sdist
      - name: Install sdist
        run: python -m pip install --verbose dist/*.tar.gz
      - name: Run tests
        run: python -m unittest
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  upload_pypi:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: ðŸš€ Deploy to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mnt.nanoplacer
    permissions:
      id-token: write
    needs: [build_wheel, build_sdist]
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
